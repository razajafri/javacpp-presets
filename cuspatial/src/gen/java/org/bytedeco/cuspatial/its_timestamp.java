// Targeted by JavaCPP version 1.5.3-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.cuspatial;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.cuspatial.global.cuspatial.*;


/**
 * \brief A timestamp
 * 
 */
@Namespace("cuspatial") @Properties(inherit = org.bytedeco.cuspatial.presets.cuspatial.class)
public class its_timestamp extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public its_timestamp() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public its_timestamp(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public its_timestamp(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public its_timestamp position(long position) {
        return (its_timestamp)super.position(position);
    }

    public native @Cast("uint32_t") @NoOffset int y(); public native its_timestamp y(int setter);
    public native @Cast("uint32_t") @NoOffset int m(); public native its_timestamp m(int setter);
    public native @Cast("uint32_t") @NoOffset int d(); public native its_timestamp d(int setter);
    public native @Cast("uint32_t") @NoOffset int hh(); public native its_timestamp hh(int setter);
    public native @Cast("uint32_t") @NoOffset int mm(); public native its_timestamp mm(int setter);
    public native @Cast("uint32_t") @NoOffset int ss(); public native its_timestamp ss(int setter);
    public native @Cast("uint32_t") @NoOffset int wd(); public native its_timestamp wd(int setter);
    public native @Cast("uint32_t") @NoOffset int yd(); public native its_timestamp yd(int setter);
    public native @Cast("uint32_t") @NoOffset int ms(); public native its_timestamp ms(int setter);
    public native @Cast("uint32_t") @NoOffset int pid(); public native its_timestamp pid(int setter);
}
