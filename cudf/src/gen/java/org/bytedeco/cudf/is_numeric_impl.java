// Targeted by JavaCPP version 1.5.3-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.cudf;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.cudf.global.cudf.*;


/**---------------------------------------------------------------------------*
 * \brief Indicates whether the type {@code T} is a numeric type.
 *
 * \tparam T  The type to verify
 * @return true {@code T} is numeric
 * @return false  {@code T} is not numeric
 *---------------------------------------------------------------------------**/

@Namespace("cudf") @Properties(inherit = org.bytedeco.cudf.presets.cudf.class)
public class is_numeric_impl extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public is_numeric_impl() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public is_numeric_impl(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public is_numeric_impl(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public is_numeric_impl position(long position) {
        return (is_numeric_impl)super.position(position);
    }

}
