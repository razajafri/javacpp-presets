// Targeted by JavaCPP version 1.5.3-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.cudf;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.cudf.global.cudf.*;

@NoOffset @Name("std::pair<rmm::device_vector<char>,rmm::device_vector<size_type> >") @Properties(inherit = org.bytedeco.cudf.presets.cudf.class)
public class std::pair<rmm::device_vector<char>,rmm::device_vector<size_type> > extends Pointer {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public std::pair<rmm::device_vector<char>,rmm::device_vector<size_type> >(Pointer p) { super(p); }
    public std::pair<rmm::device_vector<char>,rmm::device_vector<size_type> >(rmm::device_vector<char> firstValue, rmm::device_vector<size_type> secondValue) { this(); put(firstValue, secondValue); }
    public std::pair<rmm::device_vector<char>,rmm::device_vector<size_type> >()       { allocate();  }
    private native void allocate();
    public native @Name("operator=") @ByRef std::pair<rmm::device_vector<char>,rmm::device_vector<size_type> > put(@ByRef std::pair<rmm::device_vector<char>,rmm::device_vector<size_type> > x);


    @MemberGetter public native @ByRef rmm::device_vector<char> first(); public native std::pair<rmm::device_vector<char>,rmm::device_vector<size_type> > first(rmm::device_vector<char> first);
    @MemberGetter public native @ByRef rmm::device_vector<size_type> second();  public native std::pair<rmm::device_vector<char>,rmm::device_vector<size_type> > second(rmm::device_vector<size_type> second);

    public std::pair<rmm::device_vector<char>,rmm::device_vector<size_type> > put(rmm::device_vector<char> firstValue, rmm::device_vector<size_type> secondValue) {
        first(firstValue);
        second(secondValue);
        return this;
    }
}

