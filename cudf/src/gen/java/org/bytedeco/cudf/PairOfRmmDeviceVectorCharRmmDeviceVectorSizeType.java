// Targeted by JavaCPP version 1.5.3-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.cudf;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.cudf.global.cudf.*;

@NoOffset @Name("std::pair<rmm::device_vector<char>,rmm::device_vector<size_type> >") @Properties(inherit = org.bytedeco.cudf.presets.cudf.class)
public class PairOfRmmDeviceVectorCharRmmDeviceVectorSizeType extends Pointer {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public PairOfRmmDeviceVectorCharRmmDeviceVectorSizeType(Pointer p) { super(p); }
    public PairOfRmmDeviceVectorCharRmmDeviceVectorSizeType(RmmDeviceVectorChar firstValue, RmmDeviceVectorSizeType secondValue) { this(); put(firstValue, secondValue); }
    public PairOfRmmDeviceVectorCharRmmDeviceVectorSizeType()       { allocate();  }
    private native void allocate();
    public native @Name("operator=") @ByRef PairOfRmmDeviceVectorCharRmmDeviceVectorSizeType put(@ByRef PairOfRmmDeviceVectorCharRmmDeviceVectorSizeType x);


    @MemberGetter public native @ByRef RmmDeviceVectorChar first(); public native PairOfRmmDeviceVectorCharRmmDeviceVectorSizeType first(RmmDeviceVectorChar first);
    @MemberGetter public native @ByRef RmmDeviceVectorSizeType second();  public native PairOfRmmDeviceVectorCharRmmDeviceVectorSizeType second(RmmDeviceVectorSizeType second);

    public PairOfRmmDeviceVectorCharRmmDeviceVectorSizeType put(RmmDeviceVectorChar firstValue, RmmDeviceVectorSizeType secondValue) {
        first(firstValue);
        second(secondValue);
        return this;
    }
}

