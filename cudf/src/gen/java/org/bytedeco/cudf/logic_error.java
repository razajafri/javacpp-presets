// Targeted by JavaCPP version 1.5.3-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.cudf;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.cudf.global.cudf.*;

/**---------------------------------------------------------------------------*
 * \brief Exception thrown when logical precondition is violated.
 *
 * This exception should not be thrown directly and is instead thrown by the
 * CUDF_EXPECTS macro.
 *
 *---------------------------------------------------------------------------**/
@Namespace("cudf") @Properties(inherit = org.bytedeco.cudf.presets.cudf.class)
public class logic_error extends logic_error {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public logic_error(Pointer p) { super(p); }

  public logic_error(@Cast("const char*") BytePointer message) { super((Pointer)null); allocate(message); }
  private native void allocate(@Cast("const char*") BytePointer message);
  public logic_error(String message) { super((Pointer)null); allocate(message); }
  private native void allocate(String message);

  // TODO Add an error code member? This would be useful for translating an
  // exception to an error code in a pure-C API
}
