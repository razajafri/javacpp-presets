// Targeted by JavaCPP version 1.5.3-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.cudf;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.cudf.global.cudf.*;


/**
 * \brief A non-owning view of scalar from device that is trivially copyable
 * and usable in CUDA device code.
 */
@Namespace("cudf::detail") @NoOffset @Properties(inherit = org.bytedeco.cudf.presets.cudf.class)
public class scalar_device_view_base extends Pointer {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public scalar_device_view_base(Pointer p) { super(p); }


  /**
   * \brief Returns the value type
   */
  public native @ByVal @NoException __host__ type();

  /**
   * \brief Returns whether the scalar holds a valid value (i.e., not null).
   *
   * @return true The element is valid
   * @return false The element is null
   */
  public native @ByVal @NoException __device__ is_valid();

  /**
   * \brief Updates the validity of the value
   * 
   * @param is_valid true: set the value to valid. false: set it to null
   */
  public native @ByVal @NoException __device__ set_valid(@Cast("bool") boolean is_valid);
}
