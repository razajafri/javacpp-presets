// Targeted by JavaCPP version 1.5.3-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.cudf;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.cudf.global.cudf.*;


/**
 * \brief Settings to use for {@code read_avro()}
 */
@Namespace("cudf::experimental::io") @NoOffset @Properties(inherit = org.bytedeco.cudf.presets.cudf.class)
public class read_avro_args extends Pointer {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public read_avro_args(Pointer p) { super(p); }

  public native @ByRef source_info source(); public native read_avro_args source(source_info setter);

  /** Names of column to read; empty is all */
  public native @StdString @StdVector BytePointer columns(); public native read_avro_args columns(BytePointer setter);

  /** Rows to skip from the start; -1 is none */
  public native @ByRef size_type skip_rows(); public native read_avro_args skip_rows(size_type setter);
  /** Rows to read; -1 is all */
  public native @ByRef size_type num_rows(); public native read_avro_args num_rows(size_type setter);

  public read_avro_args(@Const @ByRef source_info src) { super((Pointer)null); allocate(src); }
  private native void allocate(@Const @ByRef source_info src);
}
