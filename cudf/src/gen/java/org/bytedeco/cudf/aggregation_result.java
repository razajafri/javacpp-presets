// Targeted by JavaCPP version 1.5.3-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.cudf;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.cudf.global.cudf.*;


/**
 * \brief The result(s) of an {@code aggregation_request}
 *
 * For every {@code aggregation_request} given to {@code groupby::aggregate} an
 * {@code aggregation_result} will be returned. The {@code aggregation_result} holds the
 * resulting column(s) for each requested aggregation on the {@code request}s values.
 *
 */
@Namespace("cudf::experimental::groupby") @Properties(inherit = org.bytedeco.cudf.presets.cudf.class)
public class aggregation_result extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public aggregation_result() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public aggregation_result(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public aggregation_result(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public aggregation_result position(long position) {
        return (aggregation_result)super.position(position);
    }

  /** Columns of results from an {@code aggregation_request} */
  public native @StdVector std::unique_ptr<column> results(); public native aggregation_result results(std::unique_ptr<column> setter);
}
