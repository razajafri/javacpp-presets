// Targeted by JavaCPP version 1.5.3-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.cudf;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.cudf.global.cudf.*;


/**
 * \brief Destination information for write interfaces
 */
@Namespace("cudf::experimental::io") @NoOffset @Properties(inherit = org.bytedeco.cudf.presets.cudf.class)
public class sink_info extends Pointer {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public sink_info(Pointer p) { super(p); }

  public native @Cast("cudf::experimental::io::io_type") int type(); public native sink_info type(int setter);
  public native @StdString BytePointer filepath(); public native sink_info filepath(BytePointer setter);
  public native @Cast("char*") @StdVector BytePointer buffer(); public native sink_info buffer(BytePointer setter);

  public sink_info(@StdString BytePointer file_path) { super((Pointer)null); allocate(file_path); }
  private native void allocate(@StdString BytePointer file_path);
  public sink_info(@StdString String file_path) { super((Pointer)null); allocate(file_path); }
  private native void allocate(@StdString String file_path);

  public sink_info(@Cast("char*") @StdVector ByteBuffer buffer) { super((Pointer)null); allocate(buffer); }
  private native void allocate(@Cast("char*") @StdVector ByteBuffer buffer);
  public sink_info(@Cast("char*") @StdVector byte[] buffer) { super((Pointer)null); allocate(buffer); }
  private native void allocate(@Cast("char*") @StdVector byte[] buffer);
}
